# generated by datamodel-codegen:
#   filename:  nvd.json
#   timestamp: 2024-06-03T09:21:24+00:00

from __future__ import annotations

from enum import Enum
from typing import Optional

from msgspec import Meta, Struct, field
from typing_extensions import Annotated

from .enums import (
    AccessComplexityType,
    AccessVectorType,
    AuthenticationType,
    CiaRequirementType,
    CiaType,
    CollateralDamagePotentialType,
    ExploitabilityType,
    RemediationLevelType,
    ReportConfidenceType,
    TargetDistributionType,
)

from .types import (
    ScoreType,
)


class Version(Enum):
    field_2_0 = '2.0'


class Field0(Struct, omit_defaults=True):
    version: Annotated[Version, Meta(description='CVSS Version')]
    vector_string: Annotated[
        str,
        Meta(
            pattern='^((AV:[NAL]|AC:[LMH]|Au:[MSN]|[CIA]:[NPC]|E:(U|POC|F|H|ND)|RL:(OF|TF|W|U|ND)|RC:(UC|UR|C|ND)|CDP:(N|L|LM|MH|H|ND)|TD:(N|L|M|H|ND)|[CIA]R:(L|M|H|ND))/)*(AV:[NAL]|AC:[LMH]|Au:[MSN]|[CIA]:[NPC]|E:(U|POC|F|H|ND)|RL:(OF|TF|W|U|ND)|RC:(UC|UR|C|ND)|CDP:(N|L|LM|MH|H|ND)|TD:(N|L|M|H|ND)|[CIA]R:(L|M|H|ND))$'
        ),
    ] = field(name='vectorString')
    base_score: ScoreType = field(name='baseScore')
    access_vector: Optional[AccessVectorType] = field(name='accessVector', default=None)
    access_complexity: Optional[AccessComplexityType] = field(
        name='accessComplexity', default=None
    )
    authentication: Optional[AuthenticationType] = None
    confidentiality_impact: Optional[CiaType] = field(
        name='confidentialityImpact', default=None
    )
    integrity_impact: Optional[CiaType] = field(name='integrityImpact', default=None)
    availability_impact: Optional[CiaType] = field(
        name='availabilityImpact', default=None
    )
    exploitability: Optional[ExploitabilityType] = None
    remediation_level: Optional[RemediationLevelType] = field(
        name='remediationLevel', default=None
    )
    report_confidence: Optional[ReportConfidenceType] = field(
        name='reportConfidence', default=None
    )
    temporal_score: Optional[ScoreType] = field(name='temporalScore', default=None)
    collateral_damage_potential: Optional[CollateralDamagePotentialType] = field(
        name='collateralDamagePotential', default=None
    )
    target_distribution: Optional[TargetDistributionType] = field(
        name='targetDistribution', default=None
    )
    confidentiality_requirement: Optional[CiaRequirementType] = field(
        name='confidentialityRequirement', default=None
    )
    integrity_requirement: Optional[CiaRequirementType] = field(
        name='integrityRequirement', default=None
    )
    availability_requirement: Optional[CiaRequirementType] = field(
        name='availabilityRequirement', default=None
    )
    environmental_score: Optional[ScoreType] = field(
        name='environmentalScore', default=None
    )
